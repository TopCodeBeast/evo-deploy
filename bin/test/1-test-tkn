#!/usr/bin/env bash

set -e

. $(PWD)/bin/init

# cap=$(seth --to-uint256 $(seth --to-wei 100000000000000 ether))
# seth send "$TOKEN_ERC20_RING" "changeCap(uint256)" "$cap"

# # # test mint
amount=$(seth --to-uint256 $(seth --to-wei 30000000 ether))
# # tokens=("GOLD" "WOOD" "WATER" "FIRE" "SOIL")
# tokens=("RING")
# for token in "${tokens[@]}"; do
#   seth send "$(eval echo "\$TOKEN_ERC20_${token}")" "mint(uint256)" "$amount"
# done


seth send "$TOKEN_ERC20_RING" "mint(uint256)" "$amount"
shell1=0x735182c782CB8e7806F8903dE7913e6880CbF82E
seth call "$TOKEN_ERC20_RING" "balanceOf(address)(uint256)" $shell1
seth send "$TOKEN_ERC20_RING" "transfer(address,uint)" $shell1 $amount 
seth call "$TOKEN_ERC20_RING" "balanceOf(address)(uint256)" $shell1

# WCKTON
# TOKEN_ERC20_WKTON=0xbfE9E136270cE46A2A6a8E8D54718BdAEBEbaA3D
# AUTH=0x0f14341A7f464320319025540E8Fe48Ad0fe5aec
# token balance $TOKEN_ERC20_WKTON $AUTH
# KTON_PRECOMPILE=0x0000000000000000000000000000000000000016
# amount=$(seth --to-uint256 $(seth --to-wei 10 ether))
# seth send -F $AUTH "$KTON_PRECOMPILE" "transfer_and_call(address,uint)" "$TOKEN_ERC20_WKTON" $amount  
# token balance $TOKEN_ERC20_WKTON $AUTH

# WRING
# seth send -V "$(seth --to-wei 1 ether)"  "$TOKEN_ERC20_RING" "deposit()" 

# TO=0x0000000000000000000000000000000000000015
# 0x8cbf52d3e8a22ecf6a03a49ce77ebba46220262f4d0ee7566aa741e69ee23839(2rMRC7MACm9UhTr5k1qDx7LmkgXu158CCr619ZYZjXBgTXr2)
# seth send -V "$(seth --to-wei 1 ether)" "$TO" "0x8cbf52d3e8a22ecf6a03a49ce77ebba46220262f4d0ee7566aa741e69ee23839"

# tokens=("GOLD" "WOOD" "HHO" "FIRE" "SIOO" "RING" "KTON")
# register "addr" "CONTRACT_GOLD_ERC20_TOKEN" "$GOLD"
# register "addr" "CONTRACT_WOOD_ERC20_TOKEN" "$WOOD"
# register "addr" "CONTRACT_WATER_ERC20_TOKEN" "$HHO"
# register "addr" "CONTRACT_FIRE_ERC20_TOKEN" "$FIRE"
# register "addr" "CONTRACT_SOIL_ERC20_TOKEN" "$SIOO"
# register "addr" "CONTRACT_RING_ERC20_TOKEN" "$RING"
# register "addr" "CONTRACT_KTON_ERC20_TOKEN" "$KTON"
