#!/usr/bin/env bash

set -e

. $(PWD)/bin/init

# bridge in


id=$(seth --to-uint256 2)
value=$(seth --to-uint256 2)
to=0xa1511E5C683A007056CAa1d9A8D6A37464826280
# seth call "$POLKAPET" "balanceOf(address,uint256)" $AUTH $id
seth call "$POLKAPET" "balanceOf(address,uint256)(uint256)"  $to $id
# seth send "$POLKAPET" "safeTransferFrom(address,address,uint256,uint256,bytes)" "$AUTH" "$ERC721BRIDGE_PROXY" "$id" "$value" "0x00"

seth send "$POLKAPET" "mint(address,uint256,uint256,bytes)" "$to" "$id" 5 "0x00"

## bridge out

# seth send $ERC721BRIDGE_PROXY "swapOut1155(uint256)" 0x2a0100010100050380000000000001030000000000000000000000000000006c

# tie pet
# apostle1=0x2a0100010100010200000000000000010000000000000000000000000000006b
# ppet=0x2a0100010100050380000000000001030000000000000000000000000000006c
# seth send $PETBASE_PROXY "tiePetTokenToApostle(uint256,uint256)" "$ppet" "$apostle1"

# seth send $PETBASE_PROXY "untiePetToken(uint256)" "$ppet"

# tie ck pet
# seth send $CK "createPromoKitty(uint256,address)" 1 $AUTH
# ckpet=$(seth --to-uint256 3)
# apostle1=0x2a03000103000102000000000000000300000000000000000000000000000021
# seth estimate $PETBASE_PROXY "bridgeInAndTie(address,uint256,uint256)" $CK $ckpet $apostle1
# seth send $PETBASE_PROXY "bridgeInAndTie(address,uint256,uint256)" $CK $ckpet $apostle1

