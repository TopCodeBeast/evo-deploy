#!/usr/bin/env bash

set -e

. $(PWD)/bin/init

SETTINGSREGISTRY=$(dapp create SettingsRegistry)
addAddress "SETTINGSREGISTRY" "$SETTINGSREGISTRY"

# INTERSTELLARENCODERV3 
# proxy?
INTERSTELLARENCODERV3=$(dapp create InterstellarEncoderV3)
addAddress "INTERSTELLARENCODERV3" "$INTERSTELLARENCODERV3"

interstellarEncoderId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_INTERSTELLAR_ENCODER")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $interstellarEncoderId $INTERSTELLARENCODERV3 

# OBJECTOWNERSHIPV2 
OBJECTOWNERSHIPV2=$(dapp create ObjectOwnershipV2)
addAddress "OBJECTOWNERSHIPV2" "$OBJECTOWNERSHIPV2"

OBJECTOWNERSHIP_PROXY=$(dapp create ObjectOwnerShipProxy)
addAddress "OBJECTOWNERSHIP_PROXY" "$OBJECTOWNERSHIP_PROXY"

seth send $OBJECTOWNERSHIP_PROXY "upgradeTo(address)" $OBJECTOWNERSHIPV2  
seth send $OBJECTOWNERSHIP_PROXY "initializeContract(address)" $SETTINGSREGISTRY
echo >&2 "${0##*/}: info: ObjectOwnerShipV2Proxy inited."

objectOwnershipId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_OBJECT_OWNERSHIP")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $objectOwnershipId $OBJECTOWNERSHIP_PROXY 

## TODO::CHECK
seth send $INTERSTELLARENCODERV3 "registerNewOwnershipContract(address,uint8)" $OBJECTOWNERSHIP_PROXY $(seth --to-hex 1) 
# seth send $INTERSTELLARENCODERV3 "registerNewOwnershipContract(address,uint8)" $OBJECTOWNERSHIP_PROXY $(seth --to-hex 3) 

# TokenLocation
TOKENLOCATION=$(dapp create TokenLocation)
addAddress "TOKENLOCATION" "$TOKENLOCATION"

TOKENLOCATION_PROXY=$(dapp create TokenLocationProxy)
addAddress "TOKENLOCATION_PROXY" "$TOKENLOCATION_PROXY"

seth send $TOKENLOCATION_PROXY "upgradeTo(address)" $TOKENLOCATION  
seth send $TOKENLOCATION_PROXY "initializeContract()" 
echo >&2 "${0##*/}: info: TokenLocationProxy inited."

tokenLocationId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_TOKEN_LOCATION")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $tokenLocationId $TOKENLOCATION_PROXY 

# TokenUse
TOKENUSE=$(dapp create TokenUse)
addAddress "TOKENUSE" "$TOKENUSE"

TOKENUSE_PROXY=$(dapp create TokenUseProxy)
addAddress "TOKENUSE_PROXY" "$TOKENUSE_PROXY"

seth send $TOKENUSE_PROXY "upgradeTo(address)" $TOKENUSE  
seth send $TOKENUSE_PROXY "initializeContract(address)" $SETTINGSREGISTRY
echo >&2 "${0##*/}: info: TokenUseProxy inited."

tokenUseId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_TOKEN_USE")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $tokenUseId $TOKENUSE_PROXY 

# UserPoints 
USERPOINTS=$(dapp create UserPoints)
addAddress "USERPOINTS" "$USERPOINTS"

USERPOINTS_PROXY=$(dapp create UserPointsProxy)
addAddress "USERPOINTS_PROXY" "$USERPOINTS_PROXY"

seth send $USERPOINTS_PROXY "upgradeTo(address)" $USERPOINTS  
seth send $USERPOINTS_PROXY "initializeContract()" 
echo >&2 "${0##*/}: info: UserPointsProxy inited."

userPointsId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_USER_POINTS")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $userPointsId $USERPOINTS_PROXY 

# ERC721Bridge
ERC721BRIDGE=$(dapp create ERC721Bridge)
addAddress "ERC721BRIDGE" "$ERC721BRIDGE"

ERC721BRIDGE_PROXY=$(dapp create ERC721BridgeProxy)
addAddress "ERC721BRIDGE_PROXY" "$ERC721BRIDGE_PROXY"

seth send $ERC721BRIDGE_PROXY "upgradeTo(address)" $ERC721BRIDGE  
seth send $ERC721BRIDGE_PROXY "initializeContract(address)" $SETTINGSREGISTRY
bridgeId=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_ERC721_BRIDGE")))
seth send $SETTINGSREGISTRY "setAddressProperty(bytes32,address)" $bridgeId $ERC721BRIDGE_PROXY 
echo >&2 "${0##*/}: info: ERC721BridgeProxy inited."

# ERC721Adaptor
ERC721ADAPTOR=$(dapp create ERC721Adaptor)
addAddress "ERC721ADAPTOR" "$ERC721ADAPTOR"

ERC721ADAPTOR_PROXY=$(dapp create ERC721AdaptorProxy)
addAddress "ERC721ADAPTOR_PROXY" "$ERC721ADAPTOR_PROXY"

originNFT=$CK
productId=$(seth --to-uint16 256)
seth send $ERC721ADAPTOR_PROXY "upgradeTo(address)" $ERC721ADAPTOR  
seth send $ERC721ADAPTOR_PROXY "initializeContract(address,address,uint16)" $SETTINGSREGISTRY $originNFT $productId
echo >&2 "${0##*/}: info: ERC721AdaptorProxy inited."

seth send $INTERSTELLARENCODERV3 "registerNewOwnershipContract(address,uint8)" $originNFT $(seth --to-hex 2) 
seth send $ERC721BRIDGE_PROXY "registerAdaptor(address,address)" $CK $ERC721ADAPTOR_PROXY
echo >&2 "${0##*/}: info: CK registry finished."

